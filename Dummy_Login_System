from flask import Flask, request, render_template_string

app = Flask(__name__)

# Dummy User Info DB (ID & PWD)
USER_CREDENTIALS = {
    "admin": "password123",  # ID: admin / PWD: password123
    "testuser": "testpass"   # ID: testuser / PWD: testpass
}

# Dictionary to track login attempts for each user
login_attempts = {}

# Login HTML Template
login_page = """
<!doctype html>
<html>
<head>
    <title>Dummy Login System</title>
</head>
<body>
    <h2>Login Page</h2>
    <form method="POST">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <button type="submit">Login</button>
    </form>
    <p>{{ message }}</p>
</body>
</html>
"""

@app.route("/", methods=["GET", "POST"])
def login():
    message = ""
    if request.method == "POST":
        # Get the username and password from the form
        username = request.form.get("username")
        password = request.form.get("password")

        # Initialize the login attempts for the user if not already tracked
        if username not in login_attempts:
            login_attempts[username] = 0

        # Check if the account is locked due to too many failed attempts
        if login_attempts[username] >= 3:
            message = f"Account locked for {username} due to too many failed attempts."
        else:
            # Authenticate the user
            if username in USER_CREDENTIALS and USER_CREDENTIALS[username] == password:
                message = f"Login successful! Welcome, {username}."
                login_attempts[username] = 0  # Reset login attempts on successful login
            else:
                # Increment the failed attempt count
                login_attempts[username] += 1
                # Calculate the remaining attempts
                remaining_attempts = 3 - login_attempts[username]
                
                # Check if account is locked after this failed attempt
                if remaining_attempts <= 0:
                    message = f"Account locked for {username} due to too many failed attempts."
                else:
                    message = f"Invalid username or password. You have {remaining_attempts} attempts left."

    # Render the HTML template with the appropriate message
    return render_template_string(login_page, message=message)

if __name__ == "__main__":
    # Start the Flask server
    app.run(debug=True, host="0.0.0.0", port=5000)
